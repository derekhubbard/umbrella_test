# .deliver/config

APP="umbrella_test"
# APP="umbrella_master"

USING_DISTILLERY=true

BUILD_HOST="umbrella-test.build"
BUILD_USER="deploy"
BUILD_AT="/home/deploy/edeliver/$APP/builds"

STAGING_HOSTS="TBD"
STAGING_USER="deploy"
DELIVER_TO="/home/deploy"

PRODUCTION_HOSTS="umbrella-test.prod" # deploy / production hosts separated by space # 54.163.178.252
PRODUCTION_USER="deploy" # local user at deploy hosts
DELIVER_TO="/home/deploy/$APP" # deploy directory on production hosts

# Identify location of RELEASE_DIR for umbrella projects
# RELEASE_DIR="$BUILD_AT/apps/$APP/rel/$APP"
# RELEASE_DIR="$BUILD_AT/rel/$APP"

# For *Phoenix* projects, symlink prod.secret.exs to our tmp source
pre_erlang_get_and_update_deps() {
  local _app1_prod_secret_path="/home/deploy/app1-prod.secret.exs"
  local _app2_prod_secret_path="/home/deploy/app2-prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_app1_prod_secret_path' '$BUILD_AT/apps/app1/config/prod.secret.exs' && ln -sfn '$_app2_prod_secret_path' '$BUILD_AT/apps/app2/config/prod.secret.exs' "
  fi
}

post_erlang_clean_compile() {
  [[ "$APP" = "umbrella_test" ]] && prepare_projects_in_umbrella
}

prepare_projects_in_umbrella() {
  status "Preparing projects in umbrella"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e
    cd '${BUILD_AT}'
    for UMBRELLA_APP in \$(ls -1 apps | grep -v '$APP'); do
      echo \"Preparing \${UMBRELLA_APP} in umbrella...\" $SILENCE
      cd \"${BUILD_AT}/apps/\${UMBRELLA_APP}\" $SILENCE
      APP=\"\$UMBRELLA_APP\" MIX_ENV='$TARGET_MIX_ENV' mix do deps.get, compile
    done
    cd \"${BUILD_AT}/apps/app1\"
    mkdir -p priv/static # required by the phoenix.digest task
    npm install
    NODE_ENV=production node ./node_modules/brunch/bin/brunch build --production
    APP='app1' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest
  "
}

# NODE_ENV=production node ./node_modules/.bin/webpack --display-modules --display-error-details
